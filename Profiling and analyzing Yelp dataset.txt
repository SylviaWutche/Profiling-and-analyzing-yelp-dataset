Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset 

In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =  	10000 
ii. Business table =  	10000 
iii. Category table = 	10000
iv. Checkin table =  	10000 
v. elite_years table =  10000 
vi. friend table =  	10000 
vii. hours table =  	10000 
viii. photo table =  	10000 
ix. review table =  	10000 
x. tip table =  	10000 
xi. user table =  	10000 
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 			Primary Key 10000
ii. Hours = 			Foreign key: Business_id = 1562
iii. Category = 		Foreign Key : Business_id = 2643
iv. Attribute = 		Foreign Key: Business_id = 1115
v. Review = 			Primary Key = 10000, Foreign Key: Business_id = 8090, Foreign Key: user_id = 9581
vi. Checkin = 			Foreign Key: Business_id = 493
vii. Photo = 			Primary key = 10000, Foreign Key: Business_id = 6493
viii. Tip = 			Foreign Key: Business_id = 3979, Foreign Key: Business_id = 537
ix. User = 				Primary key  = 10000
x. Friend = 			Foreign Key: user_id = 11
xi. Elite_years =		Foreign Key: Business_id = 2780




3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: There are no null vakues in the user table
	
	SQL code used to arrive at answer: 
	
	SELECT COUNT(*) AS null
	FROM user
	WHERE column_name IS NULL;

	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max: 5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT city,review_count
	FROM business
	ORDER BY review_count DESC
	
	
	Copy and Paste the Result Below:
	+------------+--------------+
	| city       | review_count |
	+------------+--------------+
	| Las Vegas  |         3873 |
	| Montréal   |         1757 |
	| Gilbert    |         1549 |
	| Las Vegas  |         1410 |
	| Las Vegas  |         1389 |
	| Las Vegas  |         1252 |
	| Las Vegas  |         1116 |
	| Las Vegas  |         1084 |
	| Las Vegas  |          961 |
	| Gilbert    |          902 |
	| Las Vegas  |          864 |
	| Scottsdale |          823 |
	| Las Vegas  |          821 |
	| Las Vegas  |          786 |
	| Henderson  |          785 |
	| Toronto    |          778 |
	| Las Vegas  |          768 |
	| Las Vegas  |          758 |
	| Scottsdale |          726 |
	| Cleveland  |          723 |
	| Las Vegas  |          720 |
	| Charlotte  |          715 |
	| Phoenix    |          711 |
	| Las Vegas  |          706 |
	| Phoenix    |          700 |
	+------------+--------------+
(Output limit exceeded, 25 of 10000 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT stars,COUNT(*) count
FROM business
WHERE city = "Avon"
GROUP BY 1
ORDER BY 2 DESC

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	+-------+---------------------+
	| stars | count 
	+-------+---------------------+
	|   3.5 |                   3 |
	|   2.5 |                   2 |
	|   4.0 |                   2 |
	|   1.5 |                   1 |
	|   4.5 |                   1 |
	|   5.0 |                   1 |
	+-------+---------------------+

ii. Beachwood

SELECT stars,COUNT(*) count
FROM business
WHERE city = "Beachwood"
GROUP BY 1
ORDER BY 2 DESC


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	+-------+---------------------+
	| stars | count 
	+-------+---------------------+
	|   5.0 |                   5 |
	|   3.0 |                   2 |
	|   3.5 |                   2 |
	|   4.5 |                   2 |
	|   2.0 |                   1 |
	|   2.5 |                   1 |
	|   4.0 |                   1 |
	+-------+---------------------+	


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT name, review_count
	FROM user
	ORDER BY 2 DESC
	LIMIT 3
		
	Copy and Paste the Result Below:
	+--------+--------------+
	| name   | review_count |
	+--------+--------------+
	| Gerald |         2000 |
	| Sara   |         1629 |
	| Yuri   |         1339 |
	+--------+--------------+	


8. Does posing more reviews correlate with more fans? NO

	Please explain your findings and interpretation of the results:
	From my findings, more reviews do not equate fans. For example: An id with 50 fans has a total of 1629 reviews while an ID with 497 fans has a total review of 968.
	
	SELECT
    fans AS 'No of fans',
   SUM(review_count) 'Total review'
FROM user
GROUP BY id
ORDER BY 2 DESC

+------------+--------------+
| No of fans | Total review |
+------------+--------------+
|        253 |         2000 |
|         50 |         1629 |
|         76 |         1339 |
|        101 |         1246 |
|        126 |         1215 |
|        311 |         1153 |
|         16 |         1116 |
|        104 |         1039 |
|        497 |          968 |
|        173 |          930 |
|         38 |          904 |
|         43 |          864 |
|        124 |          862 |
|        115 |          861 |
|         85 |          842 |
|         37 |          836 |
|        120 |          834 |
|        159 |          813 |
|         61 |          775 |
|         78 |          754 |
|         35 |          702 |
|         10 |          696 |
|        101 |          694 |
|         25 |          676 |
|         45 |          675 |
+------------+--------------+
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	Yes there are more reviews with the word "love" in them than the word "hate"
	
	SQL code used to arrive at answer:
	SELECT
    (SELECT COUNT(*) FROM review WHERE text LIKE '%love%') AS love_count,
    (SELECT COUNT(*) FROM review WHERE text LIKE '%hate%') AS hate_count;
	
	+------------+------------+
	| love_count | hate_count |
	+------------+------------+
	|       1780 |        232 |
	+------------+------------+

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT name,COUNT(fans) AS fans
	FROM user
	GROUP BY name
	ORDER BY 2 DESC
	LIMIT 10
	
	Copy and Paste the Result Below:

	+----------+------+
	| name     | fans |
	+----------+------+
	| John     |  102 |
	| David    |   90 |
	| Chris    |   74 |
	| Mike     |   74 |
	| Michael  |   72 |
	| Jennifer |   63 |
	| Mark     |   59 |
	| Lisa     |   58 |
	| Melissa  |   58 |
	| Sarah    |   55 |
	+----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating.
 Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. 
 Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	Yes they do
	SELECT  CASE WHEN stars >= 2 AND stars <= 3 THEN '2-3 Stars'
        WHEN stars >= 4 AND stars <= 5 THEN '4-5 Stars'
        ELSE 'other'
             END star_group,
        city, 
        c.category,
        count(hours) AS working_days
FROM business
JOIN hours h ON business.id = h.business_id
JOIN category c ON business.id = c.business_id
WHERE city = 'Las Vegas' AND category = 'Restaurants'
GROUP BY star_group

	+------------+-----------+-------------+--------------+
	| star_group | city      | category    | working_days |
	+------------+-----------+-------------+--------------+
	| 2-3 Stars  | Las Vegas | Restaurants |            7 |
	| 4-5 Stars  | Las Vegas | Restaurants |           14 |
	+------------+-----------+-------------+--------------+

ii. Do the two groups you chose to analyze have a different number of reviews?
    Yes     
    
SELECT  CASE WHEN stars >= 2 AND stars <= 3 THEN '2-3 Stars'
        WHEN stars >= 4 AND stars <= 5 THEN '4-5 Stars'
        ELSE 'other'
             END star_group,
        city, 
        c.category,
        SUM(review_count) Total_review
FROM business
JOIN hours h ON business.id = h.business_id
JOIN category c ON business.id = c.business_id
WHERE city = 'Las Vegas' AND category = 'Restaurants'
GROUP BY star_group

	+------------+-----------+-------------+--------------+
	| star_group | city      | category    | Total_review |
	+------------+-----------+-------------+--------------+
	| 2-3 Stars  | Las Vegas | Restaurants |          861 |
	| 4-5 Stars  | Las Vegas | Restaurants |         6552 |
	+------------+-----------+-------------+--------------+     

iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	Restuarants that have 4-5 stars rating are  located in chinatown, this could be as a result of the population of chinese living there.
SQL code used for analysis:

	SELECT  CASE WHEN stars >= 2 AND stars <= 3 THEN '2-3 Stars'
        WHEN stars >= 4 AND stars <= 5 THEN '4-5 Stars'
        ELSE 'other'
             END star_group,
        address,
        neighborhood,postal_code
FROM business
JOIN hours h ON business.id = h.business_id
JOIN category c ON business.id = c.business_id
WHERE city = 'Las Vegas' AND category = 'Restaurants'
GROUP BY star_group

	+------------+-------------------------+--------------+-------------+
	| star_group | address                 | neighborhood | postal_code |
	+------------+-------------------------+--------------+-------------+
	| 2-3 Stars  | 5045 W Tropicana Ave    |              | 89103       |
	| 4-5 Stars  | 5040 Spring Mountain Rd | Chinatown    | 89146       |
	+------------+-------------------------+--------------+-------------+
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The total reviews is high for businesses that are still open
         
         
ii. Difference 2: The Businesses that are still open have a slightly higher average stars than the closed businesses
         
         
         
SQL code used for analysis:

	SELECT CASE WHEN is_open = 1 THEN "Open"
        WHEN is_open = 0 THEN "Close"
        ELSE "Other"
        END AS Status,
        SUM(review_count),
        COUNT(id) No_of_business,
        round(avg(review_count),2) AS avg_review,
        round(avg(stars),2) AS avg_stars
from business
 GROUP BY status
ORDER BY Status DESC

	+--------+-------------------+----------------+------------+-----------+
	| Status | SUM(review_count) | No_of_business | avg_review | avg_stars |
	+--------+-------------------+----------------+------------+-----------+
	| Open   |            269300 |           8480 |      31.76 |      3.68 |
	| Close  |             35261 |           1520 |       23.2 |      3.52 |
	+--------+-------------------+----------------+------------+-----------+
	
